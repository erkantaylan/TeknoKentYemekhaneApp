@page "/employees"
@using YemekhaneApp.Frontend.Models.Employee
@using YemekhaneApp.Frontend.Services
@inject EmployeeService EmployeeService
@inject NavigationManager NavigationManager
@inject IJSRuntime JS

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <div class="card shadow">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <h3 class="mb-0">Çalışan Listesi</h3>
                    <button type="button" class="btn btn-success" @onclick="ShowAddModal">
                        <i class="bi bi-plus"></i> Ekle
                    </button>
                </div>
                <div class="card-body">
                    @if (showAddModal)
                    {
                        <div class="modal fade show d-block" tabindex="-1" style="background:rgba(0,0,0,0.5);">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title">Yeni Çalışan Ekle</h5>
                                        <button type="button" class="btn-close" @onclick="CloseAddModal"></button>
                                    </div>
                                    <div class="modal-body">
                                        <EditForm Model="newEmployee" OnValidSubmit="AddEmployeeAsync">
                                            <DataAnnotationsValidator />
                                            <div class="mb-3">
                                                <label class="form-label">Ad</label>
                                                <InputText class="form-control" @bind-Value="newEmployee.Name" />
                                            </div>
                                            <div class="mb-3">
                                                <label class="form-label">Soyad</label>
                                                <InputText class="form-control" @bind-Value="newEmployee.Surname" />
                                            </div>
                                            <div class="mb-3">
                                                <label class="form-label">Email</label>
                                                <InputText class="form-control" @bind-Value="newEmployee.Email" />
                                            </div>
                                            <div class="mb-3">
                                                <label class="form-label">Telefon</label>
                                                <InputText class="form-control" @bind-Value="newEmployee.PhoneNumber" />
                                            </div>
                                            <div class="modal-footer">
                                                <button type="submit" class="btn btn-primary">Kaydet</button>
                                                <button type="button" class="btn btn-secondary" @onclick="CloseAddModal">Geri Dön</button>
                                            </div>
                                        </EditForm>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                    @if (Employees is null)
                    {
                        <div class="alert alert-info">Yükleniyor...</div>
                    }
                    else if (Employees.Count == 0)
                    {
                        <div class="alert alert-warning">Çalışan bulunamadı.</div>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-bordered table-hover align-middle">
                                <thead class="table-dark">
                                    <tr>
                                        <th>#</th>
                                        <th>Ad Soyad</th>
                                        <th>Email</th>
                                        <th>Telefon</th>
                                        <th>Aktif mi?</th>
                                        <th>Yemek Sayısı</th>
                                        <th class="text-center">İşlemler</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var employee in Employees)
                                    {
                                        <tr>
                                            <td>@(Employees.IndexOf(employee) + 1)</td>
                                            <td>@employee.Name @employee.Surname</td>
                                            <td>@employee.Email</td>
                                            <td>@employee.PhoneNumber</td>
                                            <td>
                                                <input type="checkbox" disabled checked="@employee.IsActive" />
                                            </td>
                                            <td>@employee.TotalMealCount</td>
                                            <td class="text-center">
                                                <div class="btn-group" role="group">
                                                    <button type="button" class="btn btn-primary btn-sm" title="Güncelle" @onclick="() => ShowUpdateModal(employee)">
                                                        <i class="bi bi-pencil"></i>
                                                    </button>
                                                    <button type="button" class="btn btn-danger btn-sm" title="Sil" @onclick="() => DeleteEmployee(employee.Id)">
                                                        <i class="bi bi-trash"></i>
                                                    </button>
                                                    <button type="button" class="btn btn-info btn-sm" title="Detay" @onclick="() => ShowEmployeeMealRecords(employee.Id)">
                                                        <i class="bi bi-list"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<EmployeeViewModel>? Employees;
    private bool showAddModal = false;
    private EmployeeCreateViewModel newEmployee = new();

    protected override async Task OnInitializedAsync()
    {
        Employees = await EmployeeService.GetEmployeesAsync();
    }

    private void ShowEmployeeMealRecords(Guid employeeId)
    {
        NavigationManager.NavigateTo($"/employee-mealrecords/{employeeId}");
    }

    private void ShowAddModal()
    {
        newEmployee = new EmployeeCreateViewModel();
        showAddModal = true;
    }

    private void CloseAddModal()
    {
        showAddModal = false;
    }

    private async Task AddEmployeeAsync()
    {
        newEmployee.IsActive = true; // Default to active
        await EmployeeService.AddEmployeeAsync(newEmployee);
        Employees = await EmployeeService.GetEmployeesAsync();
        showAddModal = false;
        StateHasChanged();
    }

    private void ShowUpdateModal(EmployeeViewModel employee)
    {
        NavigationManager.NavigateTo($"/employee/update/{employee.Id}");
    }

    private async Task DeleteEmployee(Guid id)
    {
        bool confirmed = await JS.InvokeAsync<bool>("confirm", "Çalışanı silmek istediğinize emin misiniz?");
        if (!confirmed)
            return;

        await EmployeeService.DeleteEmployeeAsync(id);
        Employees = await EmployeeService.GetEmployeesAsync();
        StateHasChanged();
    }
}